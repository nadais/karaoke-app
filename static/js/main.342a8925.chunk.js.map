{"version":3,"sources":["App.js","index.js"],"names":["App","useState","rowData","setRowData","gridApi","setGridApi","loading","setLoading","setGridColumnApi","fetchSongsRemotely","fetch","then","result","json","rows","useEffect","align","onClick","class","role","getLoading","style","backgroundColor","padding","type","width","borderRadius","outline","border","fontSize","onChange","e","setQuickFilter","target","value","placeholder","className","height","defaultColDef","flex","sortable","resizable","filter","onGridReady","params","api","columnApi","field","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA4EeA,MAtEf,WACI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0CN,mBAAS,MAAnD,mBAAsBO,GAAtB,WAwBA,SAASC,IACLF,GAAW,GACXG,MAAM,sDACDC,MAAK,SAAAC,GAEF,OADWA,EAAOC,UAGrBF,MAAK,SAAAG,GACFP,GAAW,GACXJ,EAAWW,MAIvB,OAvBAC,qBAAU,WACNN,MACD,IAsBC,gCACI,oBAAIO,MAAM,SAAV,2BACA,wBAAQC,QAASR,EAAjB,0BAvBR,WACI,GAAIH,EACA,OAAO,qBAAKY,MAAM,iBAAiBC,KAAK,SAAjC,SACH,sBAAMD,MAAM,kBAAZ,0BAuBHE,GACD,qBAAKC,MA3CU,CAAEC,gBAAiB,UAAWC,QAAS,IA2CtD,SACI,uBAAOC,KAAK,SAASH,MA3Cb,CAChBI,MAAO,OAAQF,QAAS,YAAaG,aAAc,GAAIC,QAAS,EAChEC,OAAQ,oBAAqBC,SAAU,QAyCUC,SAlC1B,SAACC,GACxB3B,EAAQ4B,eAAeD,EAAEE,OAAOC,QAiC+CC,YAAY,sBAGvF,qBAAKC,UAAU,kBAAkBf,MAAO,CAAEgB,OAAQ,KAAlD,SACI,eAAC,cAAD,CAAanC,QAASA,EAClBoC,cAAe,CACXC,KAAM,EACNC,UAAU,EACVC,WAAW,EACXC,QAAQ,GAEZC,YAjDI,SAACC,GACjBvC,EAAWuC,EAAOC,KAClBrC,EAAiBoC,EAAOE,YAwChB,UAQI,cAAC,eAAD,CAAcC,MAAM,OAAOP,UAAU,EAAME,QAAQ,IACnD,cAAC,eAAD,CAAcK,MAAM,SAASP,UAAU,EAAME,QAAQ,aChEzEM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.342a8925.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction App() {\n    const [rowData, setRowData] = useState([]);\n    const [gridApi, setGridApi] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const searchDivStyle = { backgroundColor: \"#dedede\", padding: 10 }\n    const searchStyle = {\n        width: \"100%\", padding: \"10px 20px\", borderRadius: 20, outline: 0,\n        border: \"2px #68bf40 solid\", fontSize: \"100%\"\n    }\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    };\n    const onFilterTextChange = (e) => {\n        gridApi.setQuickFilter(e.target.value)\n    }\n    useEffect(() => {\n        fetchSongsRemotely();\n    }, []);\n    function getLoading() {\n        if (loading) {\n            return <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n        }\n    }\n    function fetchSongsRemotely() {\n        setLoading(true);\n        fetch('https://karaoke-birthday-admin.herokuapp.com/songs')\n            .then(result => {\n                var test = result.json();\n                return test;\n            })\n            .then(rows => {\n                setLoading(false);\n                setRowData(rows);\n            });\n    }\n\n    return (\n        <div>\n            <h1 align=\"center\">Karaoke night</h1>\n            <button onClick={fetchSongsRemotely}>\n                Reload Songs\n            </button>\n            {getLoading()}\n            <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder=\"search songs...\" />\n            </div>\n\n            <div className=\"ag-theme-alpine\" style={{ height: 600 }}>\n                <AgGridReact rowData={rowData}\n                    defaultColDef={{\n                        flex: 1,\n                        sortable: true,\n                        resizable: true,\n                        filter: true,\n                    }}\n                    onGridReady={onGridReady}>\n                    <AgGridColumn field=\"name\" sortable={true} filter={true} />\n                    <AgGridColumn field=\"artist\" sortable={true} filter={true} />\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}