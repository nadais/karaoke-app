{"version":3,"sources":["CheckboxRenderer.jsx","App.js","i18n.js","index.js"],"names":["CheckboxRenderer","props","checkedHandler","selected","node","data","colId","column","currentList","JSON","parse","localStorage","getItem","push","key","filter","x","setItem","stringify","setDataValue","callbackSelectedList","value","type","className","onClick","xmlns","width","height","fill","class","viewBox","d","Page","useState","selectedList","setSelectedList","songs","setSongs","onlyMyList","setOnlyMyList","useSearchParams","searchParams","setSearchParams","useTranslation","t","i18n","headerName","translate","field","cellRenderer","cellRendererParams","flex","sortable","minWidth","sort","columnDefs","rowData","setRowData","gridApi","setGridApi","loading","setLoading","catalogs","setCatalogs","categories","setCategories","genres","setGenres","undefined","currentGenre","setCurrentGenre","category","setCategory","catalogName","setCatalogName","searchDivStyle","padding","searchStyle","borderRadius","outline","border","fontSize","onFilterTextChange","e","setQuickFilter","target","updateRowDataForMyList","newMyList","properties","getDefaultProperties","myList","getRowData","language","a","fetch","genresResponse","result","json","response","fullCatalog","songGroups","map","includes","flatMap","v","i","indexOf","availableGenres","id","find","elem","useEffect","lang","get","changeLanguage","fetchSongsRemotely","catalog","genre","onCategoryChanged","event","newCategory","onGenreChanged","newGenre","parseInt","onLanguageChanged","updatedSearchParams","URLSearchParams","toString","set","src","alt","languages","name","onChange","disabled","Object","keys","getLanguages","newCatalog","toLowerCase","role","getLoading","length","style","placeholder","getSearchBar","defaultColDef","resizable","suppressMovable","localeTextFunc","frameworkComponents","checkboxRenderer","onGridReady","params","api","App","fallback","use","initReactI18next","Backend","LanguageDetector","init","fallbackLng","debug","interpolation","escapeValue","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f564b15.chunk.js","sourcesContent":["function CheckboxRenderer(props) {\n  function checkedHandler() {\n    let selected = !props.node.data.selected;\n    let colId = props.column.colId;\n    var currentList = JSON.parse(localStorage.getItem(\"mylist\"));\n    if (currentList == null) {\n      currentList = [];\n    }\n    if (selected) {\n      currentList.push(props.node.data.key);\n    }\n    else {\n      currentList = currentList.filter(x => x !== props.node.data.key);\n    }\n    localStorage.setItem(\"mylist\", JSON.stringify(currentList));\n    props.node.setDataValue(colId, selected);\n    props.callbackSelectedList(currentList);\n  }\n  if (props.value === false) {\n    return <button type=\"button\" className=\"btn btn-success\" onClick={checkedHandler}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n      </svg>\n    </button>\n  }\n  else {\n    return <button type=\"button\" class=\"btn btn-danger\" onClick={checkedHandler}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n      </svg>\n    </button>\n  }\n}\n\nexport default CheckboxRenderer;","import React, { useState, useEffect, Suspense } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter, useSearchParams } from 'react-router-dom';\nimport CheckboxRenderer from './CheckboxRenderer';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction Page() {\n    const [selectedList, setSelectedList] = useState([]);\n    const [songs, setSongs] = useState([]);\n    const [onlyMyList, setOnlyMyList] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const { t, i18n } = useTranslation();\n    const [columnDefs] = useState([\n        {\n            headerName: translate(\"mylist\"),\n            field: \"selected\",\n            cellRenderer: \"checkboxRenderer\",\n            cellRendererParams:\n            {\n                callbackSelectedList: setSelectedList\n            },\n            flex: 1\n        },\n        {\n            field: \"number\",\n            headerName: translate(\"number\"),\n            sortable: true,\n            filter: true,\n            flex: 1,\n            minWidth: 80\n        },\n        {\n            field: \"name\",\n            headerName: translate(\"name\"),\n            sortable: true,\n            filter: true,\n            flex: 4,\n            minWidth: 250\n        },\n        {\n            field: \"artist\",\n            headerName: translate(\"artist\"),\n            sortable: true,\n            filter: true,\n            flex: 2,\n            sort: 'asc',\n            minWidth: 170\n        }\n    ],\n    )\n    const [rowData, setRowData] = useState([]);\n    const [gridApi, setGridApi] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [catalogs, setCatalogs] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [genres, setGenres] = useState([]);\n    const [currentGenre, setCurrentGenre] = useState(undefined);\n    const [category, setCategory] = useState(undefined);\n    const [catalogName, setCatalogName] = useState(undefined);\n    const searchDivStyle = { padding: 10 }\n    const searchStyle = {\n        width: \"100%\", padding: \"10px 20px\", borderRadius: 20, outline: 0,\n        border: \"2px #68bf40 solid\", fontSize: \"100%\"\n    }\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n    };\n    const onFilterTextChange = (e) => {\n        gridApi.setQuickFilter(e.target.value)\n    }\n    useEffect(() => {\n        let lang = searchParams.get('lang');\n        if (lang != null) {\n            i18n.changeLanguage(lang);\n        }\n        fetchSongsRemotely(lang);\n    }, [i18n, searchParams]);\n    function getLoading() {\n        if (loading) {\n            return <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\"> {t('loading')}</span>\n            </div>\n        }\n    }\n    function getCategories() {\n        return <div className=\"col\">\n            <select className=\"form-select\" name='catalog' onChange={onCategoryChanged}>\n                <option value=\"\"> {t('selectCategory')}</option>\n                {categories.map(key =>\n                    (<option value={key} key={key}>{t(`categories.${key.toLowerCase()}`)}</option>))}\n            </select>\n        </div>\n    }\n    function getGenres() {\n        return <div className=\"col\">\n            <select className=\"form-select\" name='catalog' onChange={onGenreChanged}>\n                <option value=\"\"> {t('selectGenre')}</option>\n                {genres.map(key =>\n                    (<option value={key.id} key={key.id}>{key.name}</option>))}\n            </select>\n        </div>\n    }\n    function getLanguages() {\n        let languages = {\n            \"en\": \"English\",\n            \"pt\": \"Português\",\n            \"fr\": \"Français\",\n            \"it\": \"Italiano\"\n        }\n        return <span>\n            <select name='language' onChange={onLanguageChanged}>\n                <option selected disabled> {t('selectLanguage')}</option>\n                {Object.keys(languages).map(key =>\n                    (<option value={key} key={key}>{languages[key]}</option>))}\n            </select>\n        </span>\n    }\n    function updateRowDataForMyList()\n    {\n        let newMyList = !onlyMyList;\n        setOnlyMyList(!onlyMyList);\n        let properties = getDefaultProperties();\n        properties.myList = newMyList;\n        setRowData(getRowData(properties));\n    }\n    function getMyListTrigger() {\n        return <button className='btn btn-primary' onClick={updateRowDataForMyList}>\n            {onlyMyList === true ?\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\n                </svg> :\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-card-checklist\" viewBox=\"0 0 16 16\">\n                    <path d=\"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\" />\n                    <path d=\"M7 5.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0zM7 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 0 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0z\" />\n                </svg>}\n        </button>\n    }\n    function getSearchBar() {\n        if (rowData.length > 0) {\n            return <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder={t('searchSongs')} />\n            </div>\n        }\n    }\n    async function fetchSongsRemotely(language) {\n        setLoading(true);\n        let genresResponse = await fetch(`https://karaoke-api.azurewebsites.net/songs/genres?language=${language ?? ''}`);\n        let result = await fetch('https://karaoke-api.azurewebsites.net/songs');\n        var response = await result.json();\n        var genres = await genresResponse.json();\n        setGenres(genres);\n        setLoading(false);\n        var currentList = JSON.parse(localStorage.getItem(\"mylist\"));\n        if (currentList == null) {\n            currentList = [];\n        }\n        setSelectedList(currentList);\n        let fullCatalog = response.songGroups;\n        fullCatalog = fullCatalog.map(x => {\n            x.selected = currentList.includes(x.key);\n            return x;\n        })\n        let catalogs = fullCatalog.flatMap(x => x.catalogs).filter((v, i, a) => a.indexOf(v) === i && v != null);\n        let categories = fullCatalog.flatMap(x => x.categories).filter((v, i, a) => a.indexOf(v) === i && v != null);\n        let availableGenres = fullCatalog\n            .flatMap(x => x.genres)\n            .filter((v, i, a) => a.indexOf(v) === i && v != null)\n            .map(id => {\n                var elem = genres.find(x => x.id === id);\n                return elem;\n            })\n            .filter(elem => elem != null);\n        setGenres(availableGenres);\n        setCatalogs(catalogs);\n        setCategories(categories);\n        setSongs(response.songGroups);\n        setRowData(fullCatalog);\n    }\n\n    const getDefaultProperties = () =>\n    {\n        return {\n            myList: onlyMyList,\n            catalog: catalogName,\n            category: category,\n            genre: currentGenre\n        };\n    }\n\n    function getRowData(properties) {\n        if (properties.myList) {\n            return songs.filter(x => selectedList.includes(x.key));\n        }\n        let result = properties.catalog == null || properties.catalog === '' ? songs : songs.filter(x => x.catalogs.includes(properties.catalog));\n        if (properties.category != null && properties.category !== '') {\n            result = result.filter(x => x.categories.includes(properties.category));\n        }\n        if (properties.genre != null && properties.genre !== '') {\n            result = result.filter(x => x.genres.includes(properties.genre));\n        }\n        return result;\n    }\n\n    function onCategoryChanged(event) {\n        let newCategory = event.target.value === '' ? undefined : event.target.value;\n        setCategory(newCategory);\n        let properties = getDefaultProperties();\n        properties.category = newCategory;\n        setRowData(getRowData(properties));\n    }\n    function onGenreChanged(event) {\n        let newGenre = event.target.value === '' ? undefined : parseInt(event.target.value);\n        setCurrentGenre(newGenre);\n        let properties = getDefaultProperties();\n        properties.genre = newGenre;\n        setRowData(getRowData(properties));\n    }\n\n    function onLanguageChanged(event) {\n        let lang = event.target.value;\n        let updatedSearchParams = new URLSearchParams(searchParams.toString());\n        updatedSearchParams.set('lang', lang);\n        setSearchParams(updatedSearchParams.toString());\n        i18n.changeLanguage(lang);\n    }\n\n    function onCatalogChanged(event) {\n        let newCatalog = event.target.value === '' ? undefined : event.target.value;\n        setCatalogName(newCatalog);\n        let properties = getDefaultProperties();\n        properties.catalog = newCatalog;\n        setRowData(getRowData(properties));\n    }\n    function translate(key) {\n        return t(key);\n    }\n\n    return (\n        <div>\n            <div class=\"row\">\n                <div class=\"col-6 offset-md-4 offset-lg-4\"><img class=\"header-image\" src=\"header.png\" alt=\"Karaoke night\" /></div>\n            </div>\n            {getLanguages()}\n            {getMyListTrigger()}\n            <div className=\"row\">\n                <div className=\"col\">\n                    <select className=\"form-select\" name='catalog' onChange={onCatalogChanged}>\n                        <option value=\"\">{t('selectCatalog')}</option>\n                        {catalogs.map(key =>\n                            (<option value={key} key={key}>{t(`catalogs.${key.toLowerCase()}`)}</option>))}\n                    </select>\n                </div>\n                {getCategories()}\n                {getGenres()}\n                <div className=\"col\">\n                    {getLoading()}\n                </div>\n            </div>\n            {getSearchBar()}\n\n\n            <div className=\"ag-theme-alpine\" style={{ \"height\": 1000 }}>\n                <AgGridReact rowData={rowData}\n                    defaultColDef={{\n                        sortable: true,\n                        resizable: true,\n                        filter: true,\n                        suppressMovable: true\n                    }}\n                    columnDefs={columnDefs}\n                    localeTextFunc={translate}\n                    frameworkComponents={{\n                        checkboxRenderer: CheckboxRenderer\n                    }}\n                    onGridReady={onGridReady}>\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n\n// here app catches the suspense from page in case translations are not yet loaded\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Suspense fallback=\"loading\">\n                <Page />\n            </Suspense>\n        </BrowserRouter>\n    );\n}","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .use(LanguageDetector)\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n        loadPath: '/locales/{{lng}}/{{ns}}.json'\n    }\n  });\n\n  export default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}