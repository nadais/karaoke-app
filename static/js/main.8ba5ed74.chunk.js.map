{"version":3,"sources":["App.js","i18n.js","index.js"],"names":["Page","useSearchParams","searchParams","setSearchParams","useTranslation","t","i18n","useState","rowData","setRowData","gridApi","setGridApi","loading","setLoading","songs","setSongs","catalogs","setCatalogs","categories","setCategories","undefined","category","setCategory","catalogName","setCatalogName","searchDivStyle","backgroundColor","padding","searchStyle","width","borderRadius","outline","border","fontSize","onFilterTextChange","e","setQuickFilter","target","value","fetchSongsRemotely","fetch","then","result","json","response","fullCatalog","songGroups","flatMap","x","filter","v","i","a","indexOf","getRowData","newCatalogName","newCategory","includes","onCategoryChanged","event","onLanguageChanged","lang","updatedSearchParams","URLSearchParams","toString","set","changeLanguage","translate","key","useEffect","get","className","align","languages","name","onChange","selected","disabled","Object","keys","map","getLanguages","newCatalog","toLowerCase","onClick","role","getLoading","length","style","type","placeholder","getSearchBar","defaultColDef","sortable","resizable","suppressMovable","localeTextFunc","onGridReady","params","api","field","headerName","flex","minWidth","sort","App","fallback","use","initReactI18next","Backend","LanguageDetector","init","fallbackLng","debug","interpolation","escapeValue","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ba5ed74.chunk.js","sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter, useParams, useSearchParams } from 'react-router-dom';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction Page() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const { t, i18n } = useTranslation();\n    const [rowData, setRowData] = useState([]);\n    const [gridApi, setGridApi] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [songs, setSongs] = useState([]);\n    const [catalogs, setCatalogs] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [category, setCategory] = useState(undefined);\n    const [catalogName, setCatalogName] = useState(undefined);\n    const searchDivStyle = { backgroundColor: \"#dedede\", padding: 10 }\n    const searchStyle = {\n        width: \"100%\", padding: \"10px 20px\", borderRadius: 20, outline: 0,\n        border: \"2px #68bf40 solid\", fontSize: \"100%\"\n    }\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n    };\n    const onFilterTextChange = (e) => {\n        gridApi.setQuickFilter(e.target.value)\n    }\n    useEffect(() => {\n        let lang = searchParams.get('lang');\n        if (lang != null) {\n            i18n.changeLanguage(lang);\n        }\n        fetchSongsRemotely();\n    }, []);\n    function getLoading() {\n        if (loading) {\n            return <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\"> {t('loading')}</span>\n            </div>\n        }\n    }\n    function getCategories() {\n        return <div className=\"col\">\n            <select className=\"form-select\" name='catalog' onChange={onCategoryChanged}>\n                <option value=\"\"> {t('selectCategory')}</option>\n                {categories.map(key =>\n                    (<option value={key} key={key}>{t(`categories.${key.toLowerCase()}`)}</option>))}\n            </select>\n        </div>\n    }\n    function getLanguages() {\n        let languages = {\n            \"en\": \"English\",\n            \"pt\": \"PortuguÃªs\"\n        }\n        return <span>\n            <select name='language' onChange={onLanguageChanged}>\n                <option selected disabled> {t('selectLanguage')}</option>\n                {Object.keys(languages).map(key =>\n                    (<option value={key} key={key}>{languages[key]}</option>))}\n            </select>\n        </span>\n    }\n    function getSearchBar() {\n        if (rowData.length > 0) {\n            return <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder={t('searchSongs')} />\n            </div>\n        }\n    }\n    function fetchSongsRemotely() {\n        setLoading(true);\n        fetch('https://karaoke-juliane.herokuapp.com/songs')\n            .then(result => {\n                var test = result.json();\n                return test;\n            })\n            .then(response => {\n                setLoading(false);\n                let fullCatalog = response.songGroups;\n                let catalogs = fullCatalog.flatMap(x => x.catalogs).filter((v, i, a) => a.indexOf(v) === i && v != null);\n                let categories = fullCatalog.flatMap(x => x.categories).filter((v, i, a) => a.indexOf(v) === i && v != null);\n                setCatalogs(catalogs);\n                setCategories(categories);\n                setSongs(response.songGroups);\n                setRowData(fullCatalog);\n            });\n    }\n\n    function getRowData(newCatalogName, newCategory) {\n        let result = newCatalogName == null || newCatalogName === '' ? songs : songs.filter(x => x.catalogs.includes(newCatalogName));\n        if (newCategory != null && newCategory !== '') {\n            result = result.filter(x => x.categories.includes(newCategory));\n        }\n        return result;\n    }\n\n    function onCategoryChanged(event) {\n        let newCategory = event.target.value === '' ? undefined : event.target.value;\n        setCategory(newCategory);\n        setRowData(getRowData(catalogName, newCategory));\n    }\n\n    function onLanguageChanged(event) {\n        let lang = event.target.value;\n        let updatedSearchParams = new URLSearchParams(searchParams.toString());\n        updatedSearchParams.set('lang', lang);\n        setSearchParams(updatedSearchParams.toString());\n        i18n.changeLanguage(lang);\n    }\n\n    function onCatalogChanged(event) {\n        let newCatalog = event.target.value === '' ? undefined : event.target.value;\n        setCatalogName(newCatalog);\n        setRowData(getRowData(newCatalog, category));\n    }\n    function translate(key) {\n        return t(key);\n    }\n\n    return (\n        <div>\n            <div className='row'>\n                <div className='col'>\n                    <h1 align=\"center\">{t('title')}</h1>\n                </div>\n                {getLanguages()}\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <select className=\"form-select\" name='catalog' onChange={onCatalogChanged}>\n                        <option value=\"\">{t('selectCatalog')}</option>\n                        {catalogs.map(key =>\n                            (<option value={key} key={key}>{t(`catalogs.${key.toLowerCase()}`)}</option>))}\n                    </select>\n                </div>\n                {getCategories()}\n                <div className=\"col\">\n                    <button onClick={fetchSongsRemotely} className=\"btn btn-primary\">\n                        {t('reload')}\n                    </button>\n                    {getLoading()}\n                </div>\n            </div>\n            {getSearchBar()}\n\n\n            <div className=\"ag-theme-alpine\" style={{ \"height\": 1000 }}>\n                <AgGridReact rowData={rowData}\n                    defaultColDef={{\n                        sortable: true,\n                        resizable: true,\n                        filter: true,\n                        suppressMovable: true\n                    }}\n                    localeTextFunc={translate}\n                    onGridReady={onGridReady}>\n                    <AgGridColumn field=\"number\" headerName={translate(\"number\")} sortable={true} filter={true} flex={1} minWidth={80} />\n                    <AgGridColumn field=\"name\" headerName={translate(\"name\")} sortable={true} filter={true} flex={4} minWidth={250} />\n                    <AgGridColumn field=\"artist\" headerName={translate(\"artist\")} sortable={true} filter={true} flex={2} sort={'asc'} minWidth={170} />\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n\n// here app catches the suspense from page in case translations are not yet loaded\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Suspense fallback=\"loading\">\n                <Page />\n            </Suspense>\n        </BrowserRouter>\n    );\n}","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .use(LanguageDetector)\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    backend: {\n        loadPath: '/karaoke-app/locales/{{lng}}/{{ns}}.json'\n    }\n  });\n\n  export default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}