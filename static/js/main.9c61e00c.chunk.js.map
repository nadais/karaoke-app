{"version":3,"sources":["App.js","index.js"],"names":["App","useState","rowData","setRowData","gridApi","setGridApi","loading","setLoading","catalog","setCatalog","setGridColumnApi","fetchSongsRemotely","fetch","then","result","json","response","songGroups","useEffect","align","class","name","onChange","event","catalogName","target","value","Object","keys","map","key","onClick","role","getLoading","style","backgroundColor","padding","type","width","borderRadius","outline","border","fontSize","e","setQuickFilter","placeholder","className","height","defaultColDef","flex","sortable","resizable","filter","onGridReady","params","api","columnApi","field","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA8FeA,MAxFf,WACI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA0CR,mBAAS,MAAnD,mBAAsBS,GAAtB,WAwBA,SAASC,IACLJ,GAAW,GACXK,MAAM,+CACDC,MAAK,SAAAC,GAEF,OADWA,EAAOC,UAGrBF,MAAK,SAAAG,GACFT,GAAW,GACXE,EAAWO,EAASC,eAShC,OA5BAC,qBAAU,WACNP,MACD,IA2BC,gCACI,oBAAIQ,MAAM,SAAV,2BACA,sBAAKC,MAAM,MAAX,UACI,qBAAKA,MAAM,MAAX,SACI,yBAAQA,MAAM,cAAcC,KAAK,UAAUC,SAV3D,SAA0BC,GACtB,IAAIC,EAAcD,EAAME,OAAOC,MAC/BvB,EAAmC,MAAxBK,EAAQgB,GAAuB,GAAKhB,EAAQgB,KAQ3C,UACI,wBAAQE,MAAM,GAAd,6BACCC,OAAOC,KAAKpB,GAASqB,KAAI,SAAAC,GAAG,OACxB,wBAAQJ,MAAOI,EAAf,SAAqBA,YAGlC,sBAAKV,MAAM,MAAX,UACI,wBAAQW,QAASpB,EAAoBS,MAAM,kBAA3C,0BArChB,WACI,GAAId,EACA,OAAO,qBAAKc,MAAM,iBAAiBY,KAAK,SAAjC,SACH,sBAAMZ,MAAM,kBAAZ,0BAqCKa,SAGT,qBAAKC,MA3DU,CAAEC,gBAAiB,UAAWC,QAAS,IA2DtD,SACI,uBAAOC,KAAK,SAASH,MA3Db,CAChBI,MAAO,OAAQF,QAAS,YAAaG,aAAc,GAAIC,QAAS,EAChEC,OAAQ,oBAAqBC,SAAU,QAyDUpB,SAlD1B,SAACqB,GACxBvC,EAAQwC,eAAeD,EAAElB,OAAOC,QAiD+CmB,YAAY,sBAGvF,qBAAKC,UAAU,kBAAkBZ,MAAO,CAAEa,OAAQ,KAAlD,SACI,eAAC,cAAD,CAAa7C,QAASA,EAClB8C,cAAe,CACXC,KAAM,EACNC,UAAU,EACVC,WAAW,EACXC,QAAQ,GAEZC,YAjEI,SAACC,GACjBjD,EAAWiD,EAAOC,KAClB7C,EAAiB4C,EAAOE,YAwDhB,UAQI,cAAC,eAAD,CAAcC,MAAM,SAASP,UAAU,EAAME,QAAQ,IACrD,cAAC,eAAD,CAAcK,MAAM,OAAOP,UAAU,EAAME,QAAQ,IACnD,cAAC,eAAD,CAAcK,MAAM,SAASP,UAAU,EAAME,QAAQ,aClFzEM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c61e00c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction App() {\n    const [rowData, setRowData] = useState([]);\n    const [gridApi, setGridApi] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [catalog, setCatalog] = useState({});\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const searchDivStyle = { backgroundColor: \"#dedede\", padding: 10 }\n    const searchStyle = {\n        width: \"100%\", padding: \"10px 20px\", borderRadius: 20, outline: 0,\n        border: \"2px #68bf40 solid\", fontSize: \"100%\"\n    }\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    };\n    const onFilterTextChange = (e) => {\n        gridApi.setQuickFilter(e.target.value)\n    }\n    useEffect(() => {\n        fetchSongsRemotely();\n    }, []);\n    function getLoading() {\n        if (loading) {\n            return <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n        }\n    }\n    function fetchSongsRemotely() {\n        setLoading(true);\n        fetch('https://karaoke-juliane.herokuapp.com/songs')\n            .then(result => {\n                var test = result.json();\n                return test;\n            })\n            .then(response => {\n                setLoading(false);\n                setCatalog(response.songGroups);\n            });\n    }\n\n    function onCatalogChanged(event) {\n        let catalogName = event.target.value;\n        setRowData(catalog[catalogName] == null ? [] : catalog[catalogName]);\n    }\n\n    return (\n        <div>\n            <h1 align=\"center\">Karaoke night</h1>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <select class=\"form-select\" name='catalog' onChange={onCatalogChanged}>\n                        <option value=\"\"> Select catalog</option>\n                        {Object.keys(catalog).map(key =>\n                            (<option value={key}>{key}</option>))}\n                    </select>\n                </div>\n                <div class=\"col\">\n                    <button onClick={fetchSongsRemotely} class=\"btn btn-primary\">\n                        Reload Songs\n                    </button>\n                    {getLoading()}\n                </div>\n            </div>\n            <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder=\"search songs...\" />\n            </div>\n\n            <div className=\"ag-theme-alpine\" style={{ height: 600 }}>\n                <AgGridReact rowData={rowData}\n                    defaultColDef={{\n                        flex: 1,\n                        sortable: true,\n                        resizable: true,\n                        filter: true,\n                    }}\n                    onGridReady={onGridReady}>\n                    <AgGridColumn field=\"number\" sortable={true} filter={true} />\n                    <AgGridColumn field=\"name\" sortable={true} filter={true} />\n                    <AgGridColumn field=\"artist\" sortable={true} filter={true} />\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}