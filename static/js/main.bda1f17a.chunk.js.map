{"version":3,"sources":["App.js","index.js"],"names":["App","useState","rowData","setRowData","gridApi","setGridApi","loading","setLoading","catalog","setCatalog","setGridColumnApi","fetchSongsRemotely","fetch","then","result","json","response","songGroups","useEffect","align","for","name","onChange","event","catalogName","target","value","Object","keys","map","key","onClick","class","role","getLoading","style","backgroundColor","padding","type","width","borderRadius","outline","border","fontSize","e","setQuickFilter","placeholder","className","height","defaultColDef","flex","sortable","resizable","filter","onGridReady","params","api","columnApi","field","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNA0FeA,MApFf,WACI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA0CR,mBAAS,MAAnD,mBAAsBS,GAAtB,WAwBA,SAASC,IACLJ,GAAW,GACXK,MAAM,+CACDC,MAAK,SAAAC,GAEF,OADWA,EAAOC,UAGrBF,MAAK,SAAAG,GACFT,GAAW,GACXE,EAAWO,EAASC,eAUhC,OA7BAC,qBAAU,WACNP,MACD,IA4BC,gCACI,oBAAIQ,MAAM,SAAV,2BACA,uBAAOC,IAAI,UAAX,4BACA,yBAAQC,KAAK,UAAUC,SAV/B,SAA0BC,GAEtB,IAAIC,EAAcD,EAAME,OAAOC,MAC/BvB,EAAmC,MAAxBK,EAAQgB,GAAuB,GAAKhB,EAAQgB,KAOnD,UACI,wBAAQE,MAAM,GAAd,kBACCC,OAAOC,KAAKpB,GAASqB,KAAI,SAAAC,GAAG,OACxB,wBAAQJ,MAAOI,EAAf,SAAqBA,UAE9B,wBAAQC,QAASpB,EAAjB,0BAnCR,WACI,GAAIL,EACA,OAAO,qBAAK0B,MAAM,iBAAiBC,KAAK,SAAjC,SACH,sBAAMD,MAAM,kBAAZ,0BAmCHE,GACD,qBAAKC,MAvDU,CAAEC,gBAAiB,UAAWC,QAAS,IAuDtD,SACI,uBAAOC,KAAK,SAASH,MAvDb,CAChBI,MAAO,OAAQF,QAAS,YAAaG,aAAc,GAAIC,QAAS,EAChEC,OAAQ,oBAAqBC,SAAU,QAqDUrB,SA9C1B,SAACsB,GACxBxC,EAAQyC,eAAeD,EAAEnB,OAAOC,QA6C+CoB,YAAY,sBAGvF,qBAAKC,UAAU,kBAAkBZ,MAAO,CAAEa,OAAQ,KAAlD,SACI,eAAC,cAAD,CAAa9C,QAASA,EAClB+C,cAAe,CACXC,KAAM,EACNC,UAAU,EACVC,WAAW,EACXC,QAAQ,GAEZC,YA7DI,SAACC,GACjBlD,EAAWkD,EAAOC,KAClB9C,EAAiB6C,EAAOE,YAoDhB,UAQI,cAAC,eAAD,CAAcC,MAAM,SAASP,UAAU,EAAME,QAAQ,IACrD,cAAC,eAAD,CAAcK,MAAM,OAAOP,UAAU,EAAME,QAAQ,IACnD,cAAC,eAAD,CAAcK,MAAM,SAASP,UAAU,EAAME,QAAQ,aC9EzEM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bda1f17a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nfunction App() {\n    const [rowData, setRowData] = useState([]);\n    const [gridApi, setGridApi] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [catalog, setCatalog] = useState({});\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const searchDivStyle = { backgroundColor: \"#dedede\", padding: 10 }\n    const searchStyle = {\n        width: \"100%\", padding: \"10px 20px\", borderRadius: 20, outline: 0,\n        border: \"2px #68bf40 solid\", fontSize: \"100%\"\n    }\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    };\n    const onFilterTextChange = (e) => {\n        gridApi.setQuickFilter(e.target.value)\n    }\n    useEffect(() => {\n        fetchSongsRemotely();\n    }, []);\n    function getLoading() {\n        if (loading) {\n            return <div class=\"spinner-border\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n        }\n    }\n    function fetchSongsRemotely() {\n        setLoading(true);\n        fetch('https://karaoke-juliane.herokuapp.com/songs')\n            .then(result => {\n                var test = result.json();\n                return test;\n            })\n            .then(response => {\n                setLoading(false);\n                setCatalog(response.songGroups);\n            });\n    }\n\n    function onCatalogChanged(event)\n    {\n        let catalogName = event.target.value;\n        setRowData(catalog[catalogName] == null ? [] : catalog[catalogName]);\n    }\n\n    return (\n        <div>\n            <h1 align=\"center\">Karaoke night</h1>\n            <label for=\"catalog\">Select catalog</label>\n            <select name='catalog' onChange={onCatalogChanged}>\n                <option value=\"\">None</option>\n                {Object.keys(catalog).map(key =>\n                    (<option value={key}>{key}</option>))}\n            </select>\n            <button onClick={fetchSongsRemotely}>\n                Reload Songs\n            </button>\n            {getLoading()}\n            <div style={searchDivStyle}>\n                <input type=\"search\" style={searchStyle} onChange={onFilterTextChange} placeholder=\"search songs...\" />\n            </div>\n\n            <div className=\"ag-theme-alpine\" style={{ height: 600 }}>\n                <AgGridReact rowData={rowData}\n                    defaultColDef={{\n                        flex: 1,\n                        sortable: true,\n                        resizable: true,\n                        filter: true,\n                    }}\n                    onGridReady={onGridReady}>\n                    <AgGridColumn field=\"number\" sortable={true} filter={true} />\n                    <AgGridColumn field=\"name\" sortable={true} filter={true} />\n                    <AgGridColumn field=\"artist\" sortable={true} filter={true} />\n                </AgGridReact>\n            </div>\n        </div>\n    );\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}